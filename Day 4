69. Sqrt(x)

class Solution {
public:
    int mySqrt(int x) {
               int start = 0;
        int end = x;

        long long int mid = start + ( end - start )/2;

        while( start <= end )
        {
            if( mid * mid == x )
            {
                return mid;
            }
            else if( mid * mid < x )
            {
                start = mid + 1;
            }
            else
            {
                end = mid - 1;
            }
            mid = start + ( end - start )/2 ;
        }

        return start - 1;
    }
};




// 744. Find smallest letter greater than target

class Solution {
public:
    char nextGreatestLetter(vector<char>& letters, char target) {
        for(int i=0; i<letters.size(); i++)
        {
            if(letters[i]>target)
                return letters[i];
        }
        return letters[0];
    }
};

// Using binary search


class Solution {
public:
    char nextGreatestLetter(vector<char>& letters, char target) {
        int s=0;
        int e=letters.size()-1;
        int mid=s+(e-s)/2;
        char ans;
        int flag=0;
        while(s<=e)
        {
            if(letters[mid]>target)
            {
                ans = char(letters[mid]);
                e=mid-1;
                flag=1;
            }
            else if(letters[mid]<=target)
            {
                s=mid+1;
            }
            mid=s+(e-s)/2;
        }
        if(flag==0)
            return letters[0];
        else
            return ans;
    }
};
